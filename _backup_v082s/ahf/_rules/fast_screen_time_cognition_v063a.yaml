# Fast-Screen用③・④運用ルール v0.6.3a
# 短時間での精度ある採点は困難なため、原則n/a運用

## 基本原則

### Fast-Screenの目的
- **速く・安全に、上流2軸（①②）だけ確度高く**
- ③・④は「後段で当てる」に切り分け
- 釣られリスクを避け、短時間は①右肩・②勾配の「定量確度」に集中

### ③・④の運用方針
- **原則**: n/a（未採点）
- **例外**: T1強トリガーが揃った時のみ採点
- **それ以外**: 方向確率=50/50、確信度は基準値60%据置で「未確証」表示

## 強トリガー基準（T1限定）

### ③時間軸の強トリガー
- **RPO_12M**: coverage算出可（かつ整合）
- **CL_current**: coverage算出可（かつ整合）
- **算出式**: coverage = (RPO_12M or CL_current) / Q_rev × 3

### ④認知ギャップの強トリガー
- **A×B同時成立**:
  - **A**: 12Mの量（RPO_12M≥9m等）
  - **B**: 時期の明瞭化（通期段差＋レンジ縮小等）

## 表示ルール

### 原則表示（n/a）
```
③時間軸: ★ = n/a
④認知ギャップ: ★ = n/a
確信度: 60%（未確証）
方向性: 上向き/下向き = 50/50
市場織込み: 「未評価（T1不足）」
```

### 強トリガー成立時表示
```
③時間軸: ★ = 1-5（coverage基準）
④認知ギャップ: ★ = 1-5（A×B基準）
確信度: 60% + コンポーネント調整
方向性: 上向き/下向き = 算出値
市場織込み: 「評価済み」
```

## 実装要件

### A.yamlテンプレート
```yaml
# Fast-Screen用表示
fast_screen_mode: true  # Fast-Screen判定フラグ

timeline_metrics:
  timeline_star: "n/a"  # 原則n/a
  coverage_calculable: false  # 算出可否
  strong_trigger_met: false  # 強トリガー成立

cognition_metrics:
  cognition_star: "n/a"  # 原則n/a
  ab_trigger_met: false  # A×B成立
  market_assessment: "未評価（T1不足）"
```

### 確信度コンポーネント
```
確信度 = Base60pp + 既存コンポーネント（③④未確証時は追加なし）
表示: "60%（未確証）" or "XX%（評価済み）"
```

## 判定フロー

### 1. Fast-Screen判定
- 処理時間制約あり → Fast-Screen mode = true
- ③・④は原則n/a

### 2. 強トリガーチェック
- RPO_12M/CL_currentでcoverage算出可能？
- A×B同時成立？
- どちらもNO → n/a維持
- どちらかYES → 該当軸のみ採点

### 3. 表示決定
- 採点軸: 算出値表示
- 未採点軸: n/a表示
- 確信度: 未確証/評価済み表示

## メリット

### 判断の純度向上
- 誤差の大きい仮採点を排除
- ①②の定量確度に集中

### リスク回避
- 釣られリスクを避ける
- 短時間での精度低下を防止

### 効率化
- Fast-Screenは速く・安全に
- ③④は深掘り（S1/Q）に繰り越し

## 注意事項

- Fast-Screen mode判定が必須
- 強トリガーはT1限定（Lead/推論不可）
- n/a表示は明示的に「未確証」と併記
- 深掘りフェーズでは通常ルール適用

